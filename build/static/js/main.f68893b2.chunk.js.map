{"version":3,"sources":["Components/ContactList.js","Components/InputForm.js","Components/ConformationMessage.js","Components/DeleteConformation.js","index.js","Components/App.js"],"names":["ContactList","_ref","person","handleDelete","react_default","a","createElement","name","number","onClick","id","InputForm","handleNameInput","handleNumberInput","handleSubmit","handleSearch","type","onChange","placeholder","onSubmit","value","ConformationMessage","conformationMessage","DeleteConformation","deleteConformation","ReactDOM","render","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setConformationMessage","_useState9","_useState10","setDeleteConformation","_useState11","_useState12","searchContact","setSearchContact","URL","useEffect","axios","get","then","response","data","console","log","result","filter","deletedContact","window","confirm","delete","concat","res","setTimeout","searchFromContactList","toLowerCase","includes","toLocaleLowerCase","event","target","e","preventDefault","isPersonAlreadyExist","length","alert","updatedContact","put","indexOldContact","findIndex","updatedNumber","assign","toConsumableArray","defineProperty","newContact","post","map","key","document","getElementById"],"mappings":"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","file":"static/js/main.f68893b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function ContactList({ person, handleDelete }) {\r\n  return (\r\n    <p>\r\n      name: <strong> {person.name}  </strong> |\r\n      contact: <strong> {person.number}</strong>\r\n      <button onClick={() => handleDelete(person.id, person.name)}>delete</button>\r\n\r\n    </p>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function InputForm({ handleNameInput, handleNumberInput, handleSubmit, handleSearch }) {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" onChange={handleSearch} placeholder=\"Search contact\" />\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"name\" onChange={handleNameInput} />\r\n        <input type=\"number\" placeholder=\"Phone Number\" onChange={handleNumberInput} />\r\n        <input type=\"submit\" value=\"Add Contact\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ConformationMessage({ conformationMessage }) {\r\n  if (!conformationMessage) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <p>{conformationMessage} is addedOn in your phone book </p>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DeleteConformation({ deleteConformation }) {\r\n  if (!deleteConformation) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <p>{deleteConformation} Deleted from your Phone book</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport ContactList from './ContactList'\r\nimport InputForm from './InputForm'\r\nimport ConformationMessage from './ConformationMessage';\r\nimport DeleteConformation from './DeleteConformation'\r\n\r\nexport default function App() {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [conformationMessage, setConformationMessage] = useState('')\r\n  const [deleteConformation, setDeleteConformation] = useState('')\r\n  const [searchContact, setSearchContact] = useState('')\r\n\r\n  const URL = \"/persons/\"\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/persons/\")\r\n      .then(response => {\r\n        setPersons(response.data)\r\n\r\n      })\r\n  }, [])\r\n\r\n  const handleNameInput = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberInput = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n\r\n\r\n  // add new contact\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    //  new contcat list object\r\n\r\n    let id\r\n    const checkContact = persons.filter(person => {\r\n      return newName === person.name ? id = person.id : null\r\n    })\r\n\r\n    //checks if new contactname is already exists in the list if not rurn flase.\r\n    const isPersonAlreadyExist = checkContact.length > 0 ? true : false\r\n\r\n    // alerts if input is empty\r\n    if (newName.length < 1 || newNumber.length < 1) {\r\n      return alert('field cant be empty')\r\n\r\n    } else if (isPersonAlreadyExist) {\r\n      // if new contact name is already existed  \r\n      if (window.confirm(newName + 'already exist do you want to update number ? ')) {\r\n        // updated contact object\r\n        const updatedContact = { name: newName, number: newNumber, id: id }\r\n\r\n        // updates the database\r\n        axios\r\n          .put(`${URL}/${id}`, updatedContact)\r\n          .then(res => {\r\n            //remove array\r\n            const indexOldContact = persons.findIndex(({ id }) => id === res.data.id);\r\n            const updatedNumber = Object.assign([...persons], { [indexOldContact]: updatedContact });\r\n            setPersons(updatedNumber)\r\n            setNewName('')\r\n            setNewNumber('')\r\n\r\n          })\r\n      }\r\n\r\n    } else {\r\n      const newContact = { name: newName, number: newNumber }\r\n      axios\r\n        .post(URL, newContact)\r\n        .then(res => {\r\n          setPersons(persons.concat(res.data))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setConformationMessage(res.data.name)\r\n          setTimeout(() => {\r\n            setConformationMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  //handle delete\r\n  const handleDelete = (id, name) => {\r\n    console.log('id', id, 'name', name)\r\n    const result = persons.filter(person => person.id !== id)\r\n    const deletedContact = persons.filter(person => (person.id === id) ? person.name : null)\r\n    if (window.confirm('delete ' + name + ' ?')) {\r\n      axios\r\n        .delete(`${URL}/${id}`)\r\n        .then(res => {\r\n          console.log(res + 'res')\r\n          setPersons(result)\r\n          console.log('result', result)\r\n          setDeleteConformation(deletedContact[0].name)\r\n          setTimeout(() => {\r\n            setDeleteConformation(null)\r\n          }, 5000);\r\n        })\r\n    }\r\n  }\r\n  // filter search\r\n  const handleSearch = (e) => {\r\n    setSearchContact(e.target.value)\r\n  }\r\n  const searchFromContactList = persons.filter(person => {\r\n    return person.name.toLowerCase().includes(searchContact.toLocaleLowerCase())\r\n  })\r\n  // edit \r\n  // render Phonebook components row by row\r\n  const renderContactList = () => searchFromContactList.map(person => (\r\n    < ContactList\r\n      person={person}\r\n      key={person.id}\r\n      handleDelete={handleDelete}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <ConformationMessage\r\n        conformationMessage={conformationMessage}\r\n      />\r\n\r\n      <DeleteConformation\r\n        deleteConformation={deleteConformation}\r\n      />\r\n\r\n      <InputForm\r\n        handleNameInput={handleNameInput}\r\n        handleNumberInput={handleNumberInput}\r\n        handleSubmit={handleSubmit}\r\n        handleSearch={handleSearch}\r\n      />\r\n\r\n      {renderContactList()}\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}